@model IEnumerable<WebQLNS_VTH.Models.Luong>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<div class="">
    @*@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })*@
    <a href='@Url.Action("Create", "Luongs")' class="btn btn-primary">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle-fill" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z" />
        </svg> Thêm
    </a>
    <h2 class="text-center">Danh sách nhân viên</h2>
</div>
<table class="table table-bordered"  id="dataTable" width="100%" cellspacing="0">
    <thead>
        <tr style="background-color: #10B1FC;color: white">
            <th>
                @Html.DisplayNameFor(model => model.NhanVien.hoTen)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.thangNam)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.bacLuong)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.heSoLuong)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.mucLuong)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.phuCap)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.soNgayCong)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.nghiKhongPhep)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.luongUngTruoc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.luongNhan)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NhanVien.hoTen)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.thangNam)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.bacLuong)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.heSoLuong)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.mucLuong)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.phuCap)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.soNgayCong)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.nghiKhongPhep)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.luongUngTruoc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.luongNhan)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.maLuong }) |
                    @Html.ActionLink("Details", "Details", new { id = item.maLuong }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.maLuong })
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="card shadow mb-4" style="width:500px">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Bar Chart</h6>
    </div>
    <div class="card-body">
        <div class="chart-bar">
            <canvas id="myBarChart" width="200" height="400"></canvas>
        </div>
        <hr>
        Styling for the bar chart can be found in the
        <code>/js/demo/chart-bar-demo.js</code> file.
    </div>
</div>
@{
    List<string> ls = new List<string> { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6" };
}
<script>
    var ctx = document.getElementById("myBarChart");
    var myBarChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ls)),
            datasets: [{
                label: "Lương",
                backgroundColor: "#4e73df",
                hoverBackgroundColor: "#2e59d9",
                borderColor: "#4e73df",
                data: [4215, 5312, 6251, 7841, 9821, 14984],
            }],
        },
        options: {
            maintainAspectRatio: false,
            layout: {
                padding: {
                    left: 10,
                    right: 25,
                    top: 25,
                    bottom: 0
                }
            },
            scales: {
                xAxes: [{
                    time: {
                        unit: 'month'
                    },
                    gridLines: {
                        display: false,
                        drawBorder: false
                    },
                    ticks: {
                        maxTicksLimit: 6
                    },
                    maxBarThickness: 25,
                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 15000,
                        maxTicksLimit: 5,
                        padding: 10,
                        // Include a dollar sign in the ticks
                        callback: function (value, index, values) {
                            return '$' + number_format(value);
                        }
                    },
                    gridLines: {
                        color: "rgb(234, 236, 244)",
                        zeroLineColor: "rgb(234, 236, 244)",
                        drawBorder: false,
                        borderDash: [2],
                        zeroLineBorderDash: [2]
                    }
                }],
            },
            legend: {
                display: false
            },
            tooltips: {
                titleMarginBottom: 10,
                titleFontColor: '#6e707e',
                titleFontSize: 14,
                backgroundColor: "rgb(255,255,255)",
                bodyFontColor: "#858796",
                borderColor: '#dddfeb',
                borderWidth: 1,
                xPadding: 15,
                yPadding: 15,
                displayColors: false,
                caretPadding: 10,
                callbacks: {
                    label: function (tooltipItem, chart) {
                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                        return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
                    }
                }
            },
        }
    });

</script>